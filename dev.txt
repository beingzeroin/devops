DEV info

########## TODO git_init.sh ##########

# create directories and move into
mkdir -p ~/Projects/provision-tools && cd $_
cd ~/Projects/provision-tools

# git
git config user.name "niqdev"
git config user.email niqdev@gmail.com
echo "# provision-tools" > README.md
echo -e "*~\n.DS_Store" > .gitignore
git init
git add .
git commit -m "first commit"

########## docker ##########

# temporary image for tests
docker run --rm --name phusion phusion/baseimage:latest
docker exec -it phusion bash

########## base ##########

cd base/
docker build -t provision/base .

# paths
/var/log/supervisord.log

# check service status
supervisorctl status
supervisorctl restart zookeeper

########## base + zookeeper ##########

cd zookeeper/
docker build -t provision/zookeeper .
docker build -t provision/zookeeper -â€“build-arg VERSION=3.4.10 .
# host:container
docker run --rm --name zookeeper -p 12181:2181 provision/zookeeper
docker exec -it zookeeper bash

# paths
/opt/zookeeper/
/var/log/zookeeper/
/var/lib/zookeeper

# check zookeeper status
telnet localhost 2181
> ruok

########## base + kafka ##########

cd kafka/
docker build -t provision/kafka .
# host:container
docker run --rm --name kafka -p 19092:9092 -e ZOOKEEPER_HOSTS="localhost:2181" provision/kafka
docker exec -it kafka bash

# paths
/opt/kafka
/opt/kafka/logs

TODO hello world
https://hevodata.com/blog/how-to-set-up-kafka-on-ubuntu-16-04/

########## zookeeper + kafka ##########

docker network create --driver bridge my_network
docker network ls
docker network inspect my_network

docker run --rm \
  --name kafka \
  -p 19092:9092 \
  --network=my_network \
  -e ZOOKEEPER_HOSTS="zookeeper:2181" \
  provision/kafka

docker run --rm \
  --name zookeeper \
  -p 12181:2181 \
  --network=my_network \
  provision/zookeeper

apt-get install iputils-ping telnet -y
ping IP_V4_ADDRESS

########## cassandra ##########

docker-compose up
docker exec -it cassandra bash
docker exec -it cassandra bash -c cqlsh

# paths
/etc/cassandra/
/var/lib/cassandra/data/

# execute cql from host
(docker exec -i cassandra bash -c "cat > EXAMPLE.cql; cqlsh -f EXAMPLE.cql") < PATH/TO/EXAMPLE.cql

docker rm -fv cassandra
