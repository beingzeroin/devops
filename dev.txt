DEV info

TODO
* cassandra
* kafka
* elastic-search
* kong

---

* Avro **Avro** is a data serialization system
* Parquet **Parquet** is a columnar storage format that can efficiently store nested data
* Flume
* Sqoop
* Pig
* Hive
* Presto
* Crunch
* HBase
* Flink
* Ganglia **Ganglia** is a monitoring system for Hadoop
* Zeppelin
* Knox

########## TODO git_init.sh ##########

# create directories and move into
mkdir -p ~/Projects/provision-tools && cd $_
cd ~/Projects/provision-tools

# git
git config user.name "niqdev"
git config user.email niqdev@gmail.com
echo "# provision-tools" > README.md
echo -e "*~\n.DS_Store" > .gitignore
git init
git add .
git commit -m "first commit"

TODO git push

########## docker ##########

TODO
```
docker build -t provision/base ./base
docker-compose -f docker-compose-local.yml up

docker exec -it cassandra-local bash
```

# tutorial
https://kafka.apache.org/quickstart
https://hevodata.com/blog/how-to-set-up-kafka-on-ubuntu-16-04/
http://www.thecloudavenue.com/2013/10/installation-and-configuration-of.html

########## hadoop-spark ##########

TODO
curl -O https://raw.githubusercontent.com/spark-in-action/first-edition/master/spark-in-action-box.json
vagrant box add spark-in-action-box.json
vagrant init manning/spark-in-action
vagrant up
vagrant halt
vagrant destroy
vagrant box remove manning/spark-in-action

https://github.com/martinprobson/vagrant-hadoop-hive-spark
https://dwbi.org/etl/bigdata/183-setup-hadoop-cluster

########## avro ##########

https://avro.apache.org/docs/current/gettingstartedjava.html

http://www.foundweekends.org/giter8/setup.html

avro-1.8.2.jar
avro-tools-1.8.2.jar

http://www-eu.apache.org/dist/avro/stable/java/avro-1.8.2.jar
http://www-eu.apache.org/dist/avro/stable/java/avro-tools-1.8.2.jar

# jackson
core-asl
mapper-asl

avro-maven-plugin

user.avsc
{"namespace": "example.avro",
 "type": "record",
 "name": "User",
 "fields": [
     {"name": "name", "type": "string"},
     {"name": "favorite_number",  "type": ["int", "null"]},
     {"name": "favorite_color", "type": ["string", "null"]}
 ]
}

# compile schema to generate code
java -jar /path/to/avro-tools-1.8.2.jar compile schema user.avsc .
