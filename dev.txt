DEV info

TODO
[x] static site from markdown
[ ] docker-machine
[x] ansible
[x] zookeeper
[x] kafka
[x] cassandra
[ ] elastic-search
[x] hadoop + hdfs + yarn
[ ] oozie
[ ] ganglia
[ ] spark
[ ] flink
[ ] (knox)
[ ] kong

TODO docs
* https://hexo.io
 - http://mkkhedawat.com
 - https://svdb.co
* https://gohugo.io
 - >>> https://themes.gohugo.io/hugo-code-editor-theme/

########## TODO git_init.sh ##########

# create directories and move into
mkdir -p ~/Projects/provision-tools && cd $_
cd ~/Projects/provision-tools

# git
git config user.name "niqdev"
git config user.email niqdev@gmail.com
echo "# provision-tools" > README.md
echo -e "*~\n.DS_Store" > .gitignore
git init
git add .
git commit -m "first commit"

TODO git push

########## hugo ##########

https://gohugo.io/
# tutorial
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-hugo-a-static-site-generator-on-ubuntu-14-04
https://gohugo.io/hosting-and-deployment/hosting-on-github/

# release page
https://github.com/gohugoio/hugo/releases
# install on ubuntu 64 version
wget https://github.com/gohugoio/hugo/releases/download/v0.32.3/hugo_0.32.3_Linux-64bit.deb
sudo dpkg --install hugo*.deb
rm hugo*.deb
hugo version

TODO
hugo new site my-site
cd my-site
git clone git@github.com:aubm/hugo-code-editor-theme.git themes/code-editor
# change
vim config.toml
hugo -t code-editor
hugo new posts/my-first-post.md
hugo server -D

########## mkdocs ##########

pip install mkdocs
mkdocs new .
mkdocs serve
mkdocs build --clean
mkdocs gh-deploy

########## docker ##########

# temporary image for tests
docker run --rm --name phusion phusion/baseimage:latest
docker exec -it phusion bash

########## base ##########

cd base/
docker build -t provision/base .

# paths
/var/log/supervisord.log

# check service status
supervisorctl status
supervisorctl restart zookeeper

########## base + zookeeper ##########

cd zookeeper/
docker build -t provision/zookeeper .
docker build -t provision/zookeeper -â€“build-arg VERSION=3.4.10 .
# host:container
docker run --rm --name zookeeper -p 12181:2181 provision/zookeeper
docker exec -it zookeeper bash

# paths
/opt/zookeeper/
/var/log/zookeeper/
/var/lib/zookeeper

# check zookeeper status
telnet localhost 2181
> ruok

########## base + kafka ##########

cd kafka/
docker build -t provision/kafka .
# host:container
docker run --rm --name kafka -p 19092:9092 -e ZOOKEEPER_HOSTS="localhost:2181" provision/kafka
docker exec -it kafka bash

# paths
/opt/kafka
/opt/kafka/logs
/var/log/kafka
/var/lib/kafka/data

# test
cd /opt/kafka/bin
./kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic test
./kafka-topics.sh --list --zookeeper zookeeper:2181
./kafka-console-producer.sh --broker-list kafka:9092 --topic test
./kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic test --from-beginning

# tutorial
https://kafka.apache.org/quickstart
https://hevodata.com/blog/how-to-set-up-kafka-on-ubuntu-16-04/

########## zookeeper + kafka ##########

docker network create --driver bridge my_network
docker network ls
docker network inspect my_network

docker run --rm \
  --name kafka \
  -p 19092:9092 \
  --network=my_network \
  -e ZOOKEEPER_HOSTS="zookeeper:2181" \
  provision/kafka

docker run --rm \
  --name zookeeper \
  -p 12181:2181 \
  --network=my_network \
  provision/zookeeper

apt-get install iputils-ping telnet -y
ping IP_V4_ADDRESS

########## cassandra ##########

docker-compose up
docker exec -it cassandra bash
docker exec -it cassandra bash -c cqlsh

# paths
/etc/cassandra
/var/lib/cassandra
/var/log/cassandra

# execute cql from host
(docker exec -i cassandra bash -c "cat > EXAMPLE.cql; cqlsh -f EXAMPLE.cql") < PATH/TO/EXAMPLE.cql

docker rm -fv cassandra

########## hadoop-spark ##########

cd hadoop-spark

# generate file
vagrant init

# update bento box
vagrant box update

vagrant up
vagrant status
vagrant ssh
# reload (halt + up) + re-provision
vagrant reload --provision
vagrant destroy -f

TODO
curl -O https://raw.githubusercontent.com/spark-in-action/first-edition/master/spark-in-action-box.json
vagrant box add spark-in-action-box.json
vagrant init manning/spark-in-action
vagrant up
vagrant halt
vagrant destroy
vagrant box remove manning/spark-in-action

TODO
http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/SingleCluster.html
https://github.com/martinprobson/vagrant-hadoop-hive-spark
